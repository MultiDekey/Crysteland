<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ohs_init();
ohs_set_url("host","/path");
ohs_set_table("Beispiel");
ohs_set_password("n8TrgK56");

ohs_ok = ohs_table_update();
if (!ohs_ok) {
  show_message("Fehler beim Laden der Tabelle!");
} else {
  switch (ohs_get_status()) {
    case 3 :
      show_message("Tabelle nicht gefunden!");
      break;
    case 4 :
      show_message("Tabelle fehlerhaft!");
      break;
  }
}

event_perform(ev_other,ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j, n, m, max_row, width;

draw_set_font(font_ohs);
m = ohs_table_rows();
n = ohs_table_columns();
width = 0;
for (i = 0; i &lt; n; i += 1) {
  max_row[i] = string_width(ohs_header_get(i));
  for (j = 0; j &lt; m; j += 1) {
    max_row[i] = max(max_row[i],string_width(ohs_table_get(i,j)));
  }
  max_row[i] += 14;
  width += max_row[i];
}

for (i = 0; i &lt; n; i += 1) {
  col_width[i] = max_row[i]/width*620;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, j, pos;

if (ohs_ok) {
  draw_set_color($ffcccc);
  draw_rectangle(10,10,630,35,false);
  draw_set_color($cc0000);
  draw_rectangle(10,10,630,35,true);
  
  draw_set_halign(fa_center);
  draw_set_valign(fa_middle);
  draw_set_color(c_black);
  
  pos = 10;
  for (i = 0; i &lt; ohs_table_columns(); i += 1) {
    draw_text(pos+col_width[i]/2,23,ohs_header_get(i));
    pos += col_width[i];
  }
  
  for (i = 0; i &lt; ohs_table_rows(); i += 1) {
    pos = 10;
    draw_set_color($ffaaaa);
    draw_rectangle(10,40+30*i,630,65+30*i,false);
    draw_set_color($cc0000);
    draw_rectangle(10,40+30*i,630,65+30*i,true);
    if (ohs_get_position() == i) {
      draw_set_color($0000cc);
    } else {
      draw_set_color(c_black);
    }
    for (j = 0; j &lt; ohs_table_columns(); j += 1) {
      draw_text(pos+col_width[j]/2,53+30*i,ohs_table_get(j,i));
      pos += col_width[j];
    }
  }
  
  pos = 10;
  for (i = 0; i &lt; ohs_table_columns()-1; i += 1) {
    pos += col_width[i];
    draw_set_color($cc0000);
    draw_line(pos,10,pos,35+ohs_table_rows()*30);
  }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ohs_submit_add(1,get_string("Name (3-20 Zeichen) :",""));
ohs_submit_add(2,get_string("Punkte (0-1000000000) :","0"));

ohs_ok = ohs_table_update();
if (!ohs_ok) {
  show_message("Fehler beim Laden der Tabelle!");
} else {
  switch (ohs_get_status()) {
    case 1 :
      show_message("Ungï¿½ltige Werte!");
      break;
    case 2 :
      show_message("Falsches Passwort!");
      break;
    case 3 :
      show_message("Tabelle nicht gefunden!");
      break;
    case 4 :
      show_message("Tabelle fehlerhaft!");
      break;
  }
}

event_perform(ev_other,ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
