<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_truhe_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>50</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_mask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>open = false;
draw = false;
drawkey = false;
canset = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw = false;
canset = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if canset = true
{
    alarm[0] = 100;
    canset = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawkey = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawkey = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.keys &gt;= 1
{
if open = false
{
sound_play(snd_chest);
switch (floor(random(67))) {
    case 0: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 1: global.keys -= 1; instance_create(x,y-10,obj_key); open = true; //Key
    break;
    case 2: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 3: global.keys -= 1; instance_create(x,y-10,obj_cake); open = true; //Cake
    break;
    case 4: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 5: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 6: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 7: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 8: global.keys -= 1; instance_create(x,y-10,obj_key); open = true; //Key
    break;
    case 9: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 10: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 11: global.keys -= 1; instance_create(x,y-16,obj_item_1); open = true; //Item 1
    break;
    case 12: global.keys -= 1; instance_create(x,y-10,obj_cake); open = true; //Cake
    break;
    case 13: global.keys -= 1; instance_create(x,y-10,obj_casino_chip); open = true; //Chip
    break;
    case 14: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 15: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 16: global.keys -= 1; instance_create(x,y-10,obj_key); open = true; //Key
    break;
    case 17: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 18: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 19: global.keys -= 1; instance_create(x,y-16,obj_item_2); open = true; //Item 2
    break;
    case 20: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 21: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 22: global.keys -= 1; instance_create(x,y-16,obj_item_3); open = true; //Item 3
    break;
    case 23: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 24: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 25: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 26: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 27: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 28: global.keys -= 1; instance_create(x,y-10,obj_casino_chip); open = true; //Chip
    break;
    case 29: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 30: global.keys -= 1; instance_create(x,y-10,obj_key); open = true; //Key
    break;
    case 31: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 32: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 33: global.keys -= 1; instance_create(x,y-16,obj_item_2); open = true; //Item 2
    break;
    case 34: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 35: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 36: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 37: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 38: global.keys -= 1; instance_create(x,y-16,obj_item_1); open = true; //Item 1
    break;
    case 39: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 40: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 41: global.keys -= 1; instance_create(x,y-10,obj_casino_chip); open = true; //Chip
    break;
    case 42: global.keys -= 1; instance_create(x,y-10,obj_key); open = true; //Key
    break;
    case 43: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 44: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 45: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 46: global.keys -= 1; instance_create(x,y-16,obj_item_5); open = true; //Item 5
    break;
    case 47: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 48: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 49: global.keys -= 1; instance_create(x,y-10,obj_cake); open = true; //Cake
    break;
    case 50: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 51: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 52: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 53: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 54: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 55: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 56: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 57: global.keys -= 1; instance_create(x,y-10,obj_cake); open = true; //Cake
    break;
    case 58: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 59: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 60: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 61: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 62: global.keys -= 1; instance_create(x,y-16,obj_item_4); open = true; //Item 4
    break;
    case 63: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 64: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 65: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 66: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 67: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 68: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 69: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 70: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 71: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 72: global.keys -= 1; instance_create(x,y-16,obj_item_5); open = true; //Item 5
    break;
    case 73: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 74: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 75: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 76: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 77: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 78: global.keys -= 1; instance_create(x,y-10,obj_costume_6); open = true; //Costume 6
    break;
    case 79: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 80: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 81: global.keys -= 1; instance_create(x,y-10,obj_item_7); open = true; //Item 7
    break;
    case 82: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 83: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 84: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 85: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 86: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 87: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 88: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 89: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 90: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 91: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 92: global.keys -= 1; instance_create(x,y-16,obj_item_5); open = true; //Item 5
    break;
    case 93: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 94: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 95: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 96: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 97: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 98: global.keys -= 1; instance_create(x,y-10,obj_casino_chip); open = true; //Chip
    break;
    case 99: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 100: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 101: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 102: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 103: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 104: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 105: global.keys -= 1; instance_create(x,y-10,obj_item_6); open = true;    //Item 6
    break;
    case 106: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 107: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 108: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 109: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 110: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 111: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 112: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 113: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 114: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
    case 115: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 116: global.keys -= 1; instance_create(x,y-10,obj_casino_chip); open = true; //Chip
    break;
    case 117: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 118: global.keys -= 1; instance_create(x,y-10,obj_item_7); open = true;    //Item 7
    break;
    case 119: global.keys -= 1; instance_create(x,y-10,obj_coin); open = true;
    break;
    case 120: global.keys -= 1; instance_create(x,y-10,obj_coin_gross); open = true;
    break;
}
}
}

if global.keys &lt;= 0
{
    draw = true
}
// _______________________________________
// | Copyright Infread Engine           |
// | © Crysteland - Infread Cheat        |
// | Dont use Script without permission. |
// ---------------------------------------
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>open</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>501</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_sprite</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_truhe_1</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>open</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>501</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_sprite</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_truhe_2</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>draw</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if open = false
{
    draw_text(x-64,y-14,"Need more keys!")
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if drawkey = true
if open = false
{
    draw_sprite(spr_key,0,mouse_x,mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
