<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gui_width=640;//850;
gui_height=480;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>0</libid>
        <id>0</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(gui_width,gui_height);

global.vkup = YoYo_AddVirtualKey( gui_width-630, gui_height-74, 64, 64, vk_up );

global.vkright = YoYo_AddVirtualKey( gui_width-74, gui_height-74, 64, 64, vk_right );

global.vkdown = YoYo_AddVirtualKey( gui_width-138, gui_height-74, 64, 64, vk_down );

global.vkleft = YoYo_AddVirtualKey( gui_width-202, gui_height-74, 64, 64, vk_left );

global.e = YoYo_AddVirtualKey( gui_width-550, gui_height-74, 64, 64, ord('E') );
global.e = YoYo_AddVirtualKey( gui_width-470, gui_height-74, 64, 64, ord('F') );

//Hoch/Springen
if global.show_hud = true
{
if !keyboard_check(vk_up)
{
    draw_sprite(spr_Up,-1,gui_width-630, gui_height-74);
}
else
{
    draw_sprite(spr_Up_2,-1,gui_width-630, gui_height-74);
}
//Rechts
if !keyboard_check(vk_right)
{
    draw_sprite(spr_Right,-1,gui_width-74, gui_height-74);
}
else
{
    draw_sprite(spr_Right_2,-1,gui_width-74, gui_height-74);
}
//Runter
if !keyboard_check(vk_down)
{
    draw_sprite(spr_Down,-1,gui_width-138, gui_height-74);
}
else
{
    draw_sprite(spr_Down_2,-1,gui_width-138, gui_height-74);
}
//Links
if !keyboard_check(vk_left)
{
    draw_sprite(spr_Left,-1,gui_width-202, gui_height-74);
}
else
{
    draw_sprite(spr_Left_2,-1,gui_width-202, gui_height-74);
}
//X
if !keyboard_check(ord('E'))
{
    draw_sprite(spr_x,-1,gui_width-550, gui_height-74);
}
else
{
    draw_sprite(spr_x_2,-1,gui_width-550, gui_height-74);
}
//F
if !keyboard_check(ord('F'))
{
    draw_sprite(spr_f,-1,gui_width-470, gui_height-74);
}
else
{
    draw_sprite(spr_f_2,-1,gui_width-470, gui_height-74);
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
